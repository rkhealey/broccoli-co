// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/modal renders with isOpen 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="container isOpen"
>
    <div
        className="overlay"
        onClick={[Function]}
    />
    <div
        className="modal isOpen"
    >
        <Button
            className="closeBtn"
            onClick={[Function]}
            theme="transparent"
        >
            <Icon
                className={null}
                name="times"
                pulse={false}
            />
        </Button>
        Modal!
    </div>
</div>,
  "nodes": Array [
    <div
      className="container isOpen"
>
      <div
            className="overlay"
            onClick={[Function]}
      />
      <div
            className="modal isOpen"
      >
            <Button
                  className="closeBtn"
                  onClick={[Function]}
                  theme="transparent"
            >
                  <Icon
                        className={null}
                        name="times"
                        pulse={false}
                  />
            </Button>
            Modal!
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Modal
        isOpen={true}
        onClose={[Function]}
>
        Modal!
</Modal>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": "Modal!",
          "isOpen": true,
          "onClose": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="container isOpen"
>
          <div
                    className="overlay"
                    onClick={[Function]}
          />
          <div
                    className="modal isOpen"
          >
                    <Button
                              className="closeBtn"
                              onClick={[Function]}
                              theme="transparent"
                    >
                              <Icon
                                        className={null}
                                        name="times"
                                        pulse={false}
                              />
                    </Button>
                    Modal!
          </div>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="container isOpen"
>
          <div
                    className="overlay"
                    onClick={[Function]}
          />
          <div
                    className="modal isOpen"
          >
                    <Button
                              className="closeBtn"
                              onClick={[Function]}
                              theme="transparent"
                    >
                              <Icon
                                        className={null}
                                        name="times"
                                        pulse={false}
                              />
                    </Button>
                    Modal!
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Modal
    isOpen={true}
    onClose={[Function]}
>
    Modal!
</Modal>,
}
`;

exports[`components/modal renders with simple props 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": null,
  "nodes": Array [
    null,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Modal
        isOpen={false}
        onClose={[Function]}
>
        Modal!
</Modal>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": "Modal!",
          "isOpen": false,
          "onClose": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": null,
        "_debugID": 2,
        "_renderedOutput": null,
      },
      "_renderedNodeType": 2,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Modal
    isOpen={false}
    onClose={[Function]}
>
    Modal!
</Modal>,
}
`;
